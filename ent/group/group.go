// Code generated by ent, DO NOT EDIT.

package group

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the group type in the database.
	Label = "group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDisplayName holds the string denoting the displayname field in the database.
	FieldDisplayName = "display_name"
	// FieldExternalID holds the string denoting the externalid field in the database.
	FieldExternalID = "external_id"
	// FieldEtag holds the string denoting the etag field in the database.
	FieldEtag = "etag"
	// EdgeMembers holds the string denoting the members edge name in mutations.
	EdgeMembers = "members"
	// Table holds the table name of the group in the database.
	Table = "groups"
	// MembersTable is the table that holds the members relation/edge.
	MembersTable = "members"
	// MembersInverseTable is the table name for the Member entity.
	// It exists in this package in order to avoid circular dependency with the "member" package.
	MembersInverseTable = "members"
	// MembersColumn is the table column denoting the members relation/edge.
	MembersColumn = "group_members"
)

// Columns holds all SQL columns for group fields.
var Columns = []string{
	FieldID,
	FieldDisplayName,
	FieldExternalID,
	FieldEtag,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
